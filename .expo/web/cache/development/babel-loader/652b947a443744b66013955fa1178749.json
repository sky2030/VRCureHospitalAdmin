{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\2020\\\\Telemedicine\\\\Native\\\\Admin_EOPD\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { AuthContext } from \"./components/context\";\nimport DrawerStackScreen from \"./screens/DrawerNav\";\nimport RootStackScreen from \"./screens/RootStackScreen\";\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToken = _useState4[0],\n      setUserToken = _useState4[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(username, password) {\n        fetch(\"http://mconnecthealth.com:2000/signin\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"email\": username,\n            \"password\": password\n          })\n        }).then(function (res) {\n          return res.json();\n        }).then(function _callee(data) {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(data);\n                  _context.prev = 1;\n                  _context.next = 4;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', data.token));\n\n                case 4:\n                  _context.next = 10;\n                  break;\n\n                case 6:\n                  _context.prev = 6;\n                  _context.t0 = _context[\"catch\"](1);\n                  console.log(\"Something went wrong with sky's Code\", _context.t0);\n                  Alert(_context.t0);\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, [[1, 6]], Promise);\n        });\n        var userToken = AsyncStorage.getItem('userToken');\n        dispatch({\n          type: 'LOGIN',\n          id: username,\n          token: userToken\n        });\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {}\n    };\n  }, []);\n\n  var CheckToken = function CheckToken() {\n    setTimeout(function _callee2() {\n      var checkToken;\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setIsLoading(false);\n              checkToken = null;\n              _context3.prev = 2;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 5:\n              checkToken = _context3.sent;\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.log(_context3.t0);\n\n            case 11:\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: checkToken\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[2, 8]], Promise);\n    }, 1000);\n  };\n\n  useEffect(function () {\n    CheckToken();\n  }, []);\n\n  if (loginState.isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, loginState.userToken !== null ? React.createElement(DrawerStackScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }) : React.createElement(RootStackScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }\n  })));\n}",
  "map": {
    "version": 3,
    "sources": ["D:/2020/Telemedicine/Native/Admin_EOPD/App.js"],
    "names": [
      "React",
      "useState",
      "useEffect",
      "NavigationContainer",
      "AsyncStorage",
      "AuthContext",
      "DrawerStackScreen",
      "RootStackScreen",
      "createStore",
      "combineReducers",
      "Provider",
      "App",
      "isLoading",
      "setIsLoading",
      "userToken",
      "setUserToken",
      "initialLoginState",
      "userName",
      "loginReducer",
      "prevState",
      "action",
      "type",
      "token",
      "id",
      "useReducer",
      "loginState",
      "dispatch",
      "authContext",
      "useMemo",
      "signIn",
      "username",
      "password",
      "fetch",
      "method",
      "headers",
      "body",
      "JSON",
      "stringify",
      "then",
      "res",
      "json",
      "data",
      "console",
      "log",
      "setItem",
      "Alert",
      "getItem",
      "signOut",
      "removeItem",
      "signUp",
      "CheckToken",
      "setTimeout",
      "checkToken",
      "flex",
      "justifyContent",
      "alignItems"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React,{useState,useEffect} from 'react';\nimport {  View, ActivityIndicator,Alert } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nimport { AuthContext } from './components/context';\n\nimport DrawerStackScreen from './screens/DrawerNav';\nimport RootStackScreen from './screens/RootStackScreen';\n\nimport {createStore,combineReducers } from 'redux'\nimport {Provider} from 'react-redux'\n//import {doctorReducer} from './reducers/doctorReducer'\n//import {deptReducer} from './reducers/deptReducer'\n//import Rootreducer from './reducers/rootReducer'\n\n// const rootReducer = combineReducers({\n//   doctorReducer,\n//   deptReducer\n// });\n\n\n// const store  = createStore(rootReducer)\n\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [userToken, setUserToken] = useState(null); \n\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n   userToken: null,\n    \n  };\n\n  const loginReducer = (prevState, action) => {\n    switch( action.type ) {\n      case 'RETRIEVE_TOKEN': \n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN': \n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT': \n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case 'REGISTER': \n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: (username,password) => {\n     // setIsLoading(false);\n      fetch(\"http://mconnecthealth.com:2000/signin\",{\n      method:\"POST\",\n      headers: {\n       'Content-Type': 'application/json'\n     },\n     body:JSON.stringify({\n       \"email\":username,\n       \"password\":password\n     })\n    })\n    .then(res=>res.json())\n    .then(async (data)=>{\n         console.log(data)\n           try {\n             await AsyncStorage.setItem('userToken',data.token)\n            \n           } catch (e) {\n             console.log(\"Something went wrong with sky's Code\",e)\n              Alert(e)\n           }\n    })\n       const userToken = AsyncStorage.getItem('userToken');\n      dispatch({ type: 'LOGIN', id: username, token: userToken });\n    },\n    signOut: async() => {\n      // setUserToken(null);\n     //  setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch(e) {\n        console.log(e);\n      }\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n     //  setUserToken('fgkj');\n     //  setIsLoading(false);\n    },\n  }), []);\n\n\n  const CheckToken =  () =>{\n      setTimeout(async() => {\n      setIsLoading(false);\n       let checkToken;\n       checkToken = null;\n       try {\n         checkToken = await AsyncStorage.getItem('userToken');\n       } catch(e) {\n         console.log(e);\n       }\n       dispatch({ type: 'RETRIEVE_TOKEN', token: checkToken });\n     }, 1000);\n    }\n\n    useEffect(() => {\n      CheckToken()\n    },[]);\n\n\n    if( loginState.isLoading ) {\n      return(\n        <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n          <ActivityIndicator size=\"large\"/>\n        </View>\n      );\n    }\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      {/* <Provider store={store}> */}\n    <NavigationContainer>\n      { loginState.userToken !== null \n          ?\n          <DrawerStackScreen/>\n          :\n           <RootStackScreen/>\n      }\n      \n    </NavigationContainer>\n    {/* </Provider> */}\n    </AuthContext.Provider>\n  );\n}\n\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
