{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\2020\\\\Telemedicine\\\\Native\\\\Admin_EOPD\\\\routes\\\\InsertDoctor.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput, Button } from 'react-native-paper';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { Collapse, CollapseHeader, CollapseBody } from 'accordion-collapse-react-native';\n\nvar InsertDoctor = function InsertDoctor(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      first_name = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      last_name = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mobile = _useState6[0],\n      setMobile = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      setPassword = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      gender = _useState12[0],\n      setGender = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      DOB = _useState14[0],\n      setDOB = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      registration_no = _useState16[0],\n      setRegistration = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      experience = _useState18[0],\n      setExperience = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      degree = _useState20[0],\n      setDegree = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      designation = _useState22[0],\n      setDesignation = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      department = _useState24[0],\n      setDepartment = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      deptcode = _useState26[0],\n      setDeptcode = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      specialities = _useState28[0],\n      setSpecialities = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      picture = _useState30[0],\n      setPicture = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      modal = _useState32[0],\n      setModal = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      deptData = _useState34[0],\n      setDept = _useState34[1];\n\n  var _useState35 = useState(true),\n      _useState36 = _slicedToArray(_useState35, 2),\n      loading = _useState36[0],\n      setLoading = _useState36[1];\n\n  var fetchDept = function fetchDept() {\n    fetch(\"http://mconnecthealth.com:2000/get_dept\").then(function (res) {\n      return res.json();\n    }).then(function (results) {\n      setDept(results);\n      setLoading(false);\n    }).catch(function (err) {\n      Alert.alert(\"Something Went Wrong\" + err);\n    });\n  };\n\n  var submitData = function submitData() {\n    fetch(\"http://mconnecthealth.com:2000/insert_doctor\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        first_name: first_name,\n        last_name: last_name,\n        mobile: mobile,\n        email: email,\n        gender: gender,\n        DOB: DOB,\n        password: password,\n        picture: picture,\n        registration_no: registration_no,\n        experience: experience,\n        degree: degree,\n        designation: designation,\n        deptcode: deptcode,\n        department: department,\n        specialities: specialities\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      Alert.alert(first_name + \" is saved successfully\");\n      navigation.navigate(\"Doctors\");\n    }).catch(function (err) {\n      Alert.alert(\"something went wrong\");\n    });\n  };\n\n  var pickFromGallery = function pickFromGallery() {\n    var _await$Permissions$as, granted, data, newfile;\n\n    return _regeneratorRuntime.async(function pickFromGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            granted = _await$Permissions$as.granted;\n\n            if (!granted) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0.5\n            }));\n\n          case 7:\n            data = _context.sent;\n\n            if (!data.cancelled) {\n              newfile = {\n                uri: data.uri,\n                type: \"test/\" + data.uri.split(\".\")[1],\n                name: \"test.\" + data.uri.split(\".\")[1]\n              };\n              handleUpload(newfile);\n            }\n\n            _context.next = 12;\n            break;\n\n          case 11:\n            Alert.alert(\"you need to give up permission to work\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickFromCamera = function pickFromCamera() {\n    var _await$Permissions$as2, granted, data, newfile;\n\n    return _regeneratorRuntime.async(function pickFromCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            _await$Permissions$as2 = _context2.sent;\n            granted = _await$Permissions$as2.granted;\n\n            if (!granted) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 0.5\n            }));\n\n          case 7:\n            data = _context2.sent;\n\n            if (!data.cancelled) {\n              newfile = {\n                uri: data.uri,\n                type: \"test/\" + data.uri.split(\".\")[1],\n                name: \"test.\" + data.uri.split(\".\")[1]\n              };\n              handleUpload(newfile);\n            }\n\n            _context2.next = 12;\n            break;\n\n          case 11:\n            Alert.alert(\"you need to give up permission to work\");\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleUpload = function handleUpload(image) {\n    var data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'skyMedi');\n    data.append(\"cloud_name\", \"skycloud55\");\n    fetch(\"https://api.cloudinary.com/v1_1/skycloud55/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setPicture(data.url);\n      setModal(false);\n    }).catch(function (err) {\n      Alert.alert(\"error while uploading\");\n    });\n  };\n\n  var SelectDept = function SelectDept(item) {\n    setDepartment(item.departmentname);\n    setDeptcode(item.code);\n  };\n\n  useEffect(function () {\n    fetchDept();\n  }, []);\n\n  var renderList = function renderList(item) {\n    return React.createElement(TouchableOpacity, {\n      activeOpacity: 0.95,\n      onPress: function onPress() {\n        setDepartment(item.departmentname);\n        setDeptcode(item.code);\n      },\n      style: styles.option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.deptName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, item.departmentname));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.head,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"navigate-before\",\n    size: 30,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    style: styles.back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, \"Add Doctor\")), React.createElement(ScrollView, {\n    style: styles.formArea,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    label: \"First Name\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: first_name,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setFirstName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Last Name\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: last_name,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setLastName(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: email,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Phone\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: mobile,\n    theme: theme,\n    keyboardType: \"number-pad\",\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setMobile(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: password,\n    mode: \"outlined\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }), React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    label: \"Gender\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: gender,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setGender(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '10%',\n      backgroundColor: 'lightgrey',\n      padding: 7,\n      marginLeft: 4,\n      marginTop: 4,\n      marginEnd: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 12\n    }\n  }, React.createElement(AntDesign, {\n    name: \"down\",\n    size: 24,\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 19\n    }\n  })))), React.createElement(CollapseBody, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setGender(\"Male\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 65\n    }\n  }, \"Male\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setGender(\"Female\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 67\n    }\n  }, \"Female\")))), React.createElement(Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, React.createElement(CollapseHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    label: \"Department\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: department,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setDepartment(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '10%',\n      backgroundColor: 'lightgrey',\n      padding: 7,\n      marginLeft: 4,\n      marginTop: 4,\n      marginEnd: 12\n    },\n    onPress: function onPress() {\n      return fetchDept();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 12\n    }\n  }, React.createElement(AntDesign, {\n    name: \"down\",\n    size: 24,\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  })))), React.createElement(CollapseBody, {\n    style: {\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: deptData,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return renderList(item);\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }))), React.createElement(TextInput, {\n    label: \"Date of Birth\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: DOB,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setDOB(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Registration No\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: registration_no,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setRegistration(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Experience\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: experience,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setExperience(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Degree\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: degree,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setDegree(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Designation\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: designation,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setDesignation(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Specialities\",\n    placeholderTextColor: \"#666666\",\n    style: styles.inputStyle,\n    value: specialities,\n    theme: theme,\n    mode: \"outlined\",\n    onChangeText: function onChangeText(text) {\n      return setSpecialities(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    style: styles.btn,\n    icon: picture == \"\" ? \"upload\" : \"check\",\n    mode: \"contained\",\n    theme: theme,\n    onPress: function onPress() {\n      return setModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 14\n    }\n  }, \"Upload Image\"), React.createElement(Button, {\n    style: styles.btn,\n    icon: \"content-save\",\n    mode: \"contained\",\n    theme: theme,\n    onPress: function onPress() {\n      return submitData();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 14\n    }\n  }, \"save\")), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modal,\n    onRequestClose: function onRequestClose() {\n      setModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 14\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.modalButtonView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 19\n    }\n  }, React.createElement(Button, {\n    icon: \"camera\",\n    theme: theme,\n    mode: \"contained\",\n    onPress: function onPress() {\n      return pickFromCamera();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 25\n    }\n  }, \"camera\"), React.createElement(Button, {\n    icon: \"image-area\",\n    mode: \"contained\",\n    theme: theme,\n    onPress: function onPress() {\n      return pickFromGallery();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 25\n    }\n  }, \"gallery\")), React.createElement(Button, {\n    theme: theme,\n    onPress: function onPress() {\n      return setModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 17\n    }\n  }, \"cancel\"))));\n};\n\nvar theme = {\n  colors: {\n    primary: \"#006aff\"\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  head: {\n    backgroundColor: '#fff',\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  back: {\n    padding: 10,\n    color: '#694fad'\n  },\n  headtext: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    paddingHorizontal: 80,\n    color: '#694fad'\n  },\n  formArea: {\n    height: '100%'\n  },\n  root: {\n    flex: 1\n  },\n  inputStyle: {\n    flex: 1,\n    marginTop: 1,\n    paddingLeft: 2,\n    color: '#05375a',\n    height: 38,\n    elevation: 1,\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowColor: '#333',\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    marginBottom: 1\n  },\n  option: {\n    marginTop: Platform.OS === 'ios' ? 0 : -1,\n    padding: 6,\n    color: '#05375a',\n    marginEnd: 300,\n    elevation: 1,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    marginBottom: 5,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  deptName: {\n    color: '#05375a',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  btn: {\n    marginVertical: 2\n  },\n  modalView: {\n    position: \"absolute\",\n    bottom: 2,\n    width: \"100%\",\n    backgroundColor: \"white\"\n  },\n  modalButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 10\n  }\n});\nexport default InsertDoctor;",
  "map": {
    "version": 3,
    "sources": [
      "D:/2020/Telemedicine/Native/Admin_EOPD/routes/InsertDoctor.js"
    ],
    "names": [
      "React",
      "useState",
      "useEffect",
      "TextInput",
      "Button",
      "ImagePicker",
      "Permissions",
      "MaterialIcons",
      "AntDesign",
      "Collapse",
      "CollapseHeader",
      "CollapseBody",
      "InsertDoctor",
      "navigation",
      "first_name",
      "setFirstName",
      "last_name",
      "setLastName",
      "mobile",
      "setMobile",
      "email",
      "setEmail",
      "password",
      "setPassword",
      "gender",
      "setGender",
      "DOB",
      "setDOB",
      "registration_no",
      "setRegistration",
      "experience",
      "setExperience",
      "degree",
      "setDegree",
      "designation",
      "setDesignation",
      "department",
      "setDepartment",
      "deptcode",
      "setDeptcode",
      "specialities",
      "setSpecialities",
      "picture",
      "setPicture",
      "modal",
      "setModal",
      "deptData",
      "setDept",
      "loading",
      "setLoading",
      "fetchDept",
      "fetch",
      "then",
      "res",
      "json",
      "results",
      "catch",
      "err",
      "Alert",
      "alert",
      "submitData",
      "method",
      "headers",
      "body",
      "JSON",
      "stringify",
      "data",
      "navigate",
      "pickFromGallery",
      "askAsync",
      "CAMERA_ROLL",
      "granted",
      "launchImageLibraryAsync",
      "mediaTypes",
      "MediaTypeOptions",
      "Images",
      "allowsEditing",
      "aspect",
      "quality",
      "cancelled",
      "newfile",
      "uri",
      "type",
      "split",
      "name",
      "handleUpload",
      "pickFromCamera",
      "CAMERA",
      "launchCameraAsync",
      "image",
      "FormData",
      "append",
      "url",
      "SelectDept",
      "item",
      "departmentname",
      "code",
      "renderList",
      "styles",
      "option",
      "deptName",
      "container",
      "head",
      "goBack",
      "back",
      "headtext",
      "formArea",
      "inputStyle",
      "theme",
      "text",
      "flexDirection",
      "justifyContent",
      "alignItems",
      "width",
      "backgroundColor",
      "padding",
      "marginLeft",
      "marginTop",
      "marginEnd",
      "_id",
      "btn",
      "modalView",
      "modalButtonView",
      "colors",
      "primary",
      "StyleSheet",
      "create",
      "flex",
      "marginBottom",
      "color",
      "fontSize",
      "fontWeight",
      "paddingHorizontal",
      "height",
      "root",
      "paddingLeft",
      "elevation",
      "shadowOffset",
      "shadowColor",
      "shadowOpacity",
      "shadowRadius",
      "Platform",
      "OS",
      "borderWidth",
      "borderColor",
      "marginVertical",
      "position",
      "bottom"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React,{useState,useEffect} from 'react';\r\nimport { \r\n    StyleSheet,\r\n    Text, \r\n    View,\r\n    Modal,\r\n    Alert,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    FlatList,\r\n    Image\r\n    } from 'react-native';\r\nimport {TextInput,Button} from 'react-native-paper'\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\r\nimport {AntDesign } from '@expo/vector-icons';\r\nimport {Collapse,CollapseHeader, CollapseBody} from 'accordion-collapse-react-native';\r\n\r\n\r\n\r\nconst InsertDoctor = ({navigation})=>{\r\n    // const getDetails = (type) =>{\r\n    //    if(route.params){\r\n    //       switch(type){\r\n    //          case \"first_name\":\r\n    //               return route.params.first_name\r\n    //          case \"last_name\":\r\n    //               return route.params.last_name\r\n    //          case \"mobile\":\r\n    //              return route.params.mobile\r\n    //          case \"email\":\r\n    //             return route.params.email\r\n    //          case \"password\":\r\n    //             return route.params.password\r\n    //          case \"gender\":\r\n    //               return route.params.gender\r\n    //          case \"DOB\":\r\n    //                 return  route.params.DOB  \r\n    //          case \"registration_no\":\r\n    //               return  route.params.registration_no\r\n    //          case \"experience\":\r\n    //              return  route.params.experience\r\n    //          case \"consultation\":\r\n    //               return  route.params.consultation\r\n    //          case \"degree\":\r\n    //               return  route.params.degree\r\n    //          case \"designation\":\r\n    //               return  route.params.designation\r\n    //          case \"department\":\r\n    //                return  route.params.department\r\n    //          case \"Specialities\":\r\n    //               return  route.params.Specialities\r\n    //          case \"picture\":\r\n    //               return  route.params.picture\r\n              \r\n    //       }\r\n    //    }\r\n    //      return \"\"\r\n    // }\r\n    \r\n    //const [first_name,setName] = useState(getDetails(\"name\"))\r\n    const [first_name,setFirstName] = useState(\"\")\r\n    const [last_name,setLastName] = useState(\"\")\r\n    const [mobile,setMobile] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const [gender,setGender] = useState(\"\")\r\n    const [DOB,setDOB] = useState(\"\")\r\n    const [registration_no,setRegistration] = useState(\"\")\r\n    const [experience,setExperience] = useState(\"\")\r\n    const [degree,setDegree] = useState(\"\")\r\n    const [designation,setDesignation] = useState(\"\")\r\n    const [department,setDepartment] = useState(\"\")\r\n    const [deptcode,setDeptcode] = useState(\"\")\r\n    const [specialities,setSpecialities] = useState(\"\")\r\n    const [picture,setPicture] = useState(\"\")\r\n     const [modal,setModal] = useState(false)\r\n\r\n     const [deptData,setDept] = useState([])\r\n     const [loading, setLoading] = useState(true);\r\n    //const [enableshift,setenableShift] = useState(false)\r\n\r\n\r\n    const fetchDept = ()=>{\r\n        fetch(\"http://mconnecthealth.com:2000/get_dept\")\r\n        .then(res=>res.json())\r\n        .then(results=>{\r\n            setDept(results)\r\n          setLoading(false)\r\n        }).catch(err=>{\r\n            Alert.alert(\"Something Went Wrong\"+ err)\r\n        })\r\n     }\r\n\r\n    const submitData = ()=>{\r\n          fetch(\"http://mconnecthealth.com:2000/insert_doctor\",{\r\n              method:\"post\",\r\n              headers:{\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body:JSON.stringify({\r\n                first_name,\r\n                last_name,\r\n                mobile,\r\n                email,\r\n                gender,\r\n                DOB,\r\n                password,\r\n                picture,\r\n                registration_no,\r\n                experience,\r\n                degree,\r\n                designation,\r\n                deptcode,\r\n                department,\r\n                specialities\r\n              })\r\n          })\r\n          .then(res=>res.json())\r\n          .then(data=>{\r\n              Alert.alert(`${first_name} is saved successfully`)\r\n              navigation.navigate(\"Doctors\")\r\n          })\r\n          .catch(err=>{\r\n            Alert.alert(\"something went wrong\")\r\n        })\r\n\r\n        // setTimeout( () => {\r\n        //     setFirstName(\"\")\r\n        //     setLastName(\"\")\r\n        //     setMobile(\"\")\r\n        //     setEmail(\"\")\r\n        //     setPassword(\"\")\r\n        //     setGender(\"\")\r\n        //     setDOB(\"\")\r\n        //     setRegistration(\"\")\r\n        //     setExperience(\"\")\r\n        //     setConsultation(\"\")\r\n        //     setDegree(\"\")\r\n        //     setDesignation(\"\")\r\n        //     setDepartment(\"\")\r\n        //     setDeptcode(\"\")\r\n        //     setSpecialities(\"\")\r\n        //     setPicture(\"\")\r\n        //    }, 1000);\r\n\r\n    }\r\n\r\n    // const updateDetails = ()=>{\r\n    //     fetch(\"http://10.0.2.2:6000/update_doctor\",{\r\n    //         method:\"post\",\r\n    //         headers:{\r\n    //           'Content-Type': 'application/json'\r\n    //         },\r\n    //         body:JSON.stringify({\r\n    //             id:route.params._id,\r\n    //             first_name,\r\n    //             last_name,\r\n    //             mobile,\r\n    //             email,\r\n    //             gender,\r\n    //             DOB,\r\n    //             password,\r\n    //             picture,\r\n    //             registration_no,\r\n    //             experience,\r\n    //             consultation,\r\n    //             degree,\r\n    //             designation,\r\n    //             department,\r\n    //             Specialities\r\n    //         })\r\n    //     })\r\n    //     .then(res=>res.json())\r\n    //     .then(data=>{\r\n    //         Alert.alert(`${data.first_name} is updated successfully`)\r\n    //         navigation.navigate(\"Doctors\")\r\n    //     })\r\n    //     .catch(err=>{\r\n    //       Alert.alert(\"something went wrong\")\r\n    //   })\r\n    // }\r\n\r\n   const pickFromGallery = async ()=>{\r\n      const {granted} =  await Permissions.askAsync(Permissions.CAMERA_ROLL)\r\n      if(granted){\r\n           let data =  await ImagePicker.launchImageLibraryAsync({\r\n                mediaTypes:ImagePicker.MediaTypeOptions.Images,\r\n                allowsEditing:true,\r\n                aspect:[1,1],\r\n                quality:0.5\r\n            })\r\n            if(!data.cancelled){\r\n                let newfile = { \r\n                  uri:data.uri,\r\n                  type:`test/${data.uri.split(\".\")[1]}`,\r\n                  name:`test.${data.uri.split(\".\")[1]}` \r\n                  \r\n              }\r\n                handleUpload(newfile)\r\n            }\r\n      }else{\r\n         Alert.alert(\"you need to give up permission to work\")\r\n      }\r\n   }\r\n   const pickFromCamera = async ()=>{\r\n      const {granted} =  await Permissions.askAsync(Permissions.CAMERA)\r\n      if(granted){\r\n           let data =  await ImagePicker.launchCameraAsync({\r\n                mediaTypes:ImagePicker.MediaTypeOptions.Images,\r\n                allowsEditing:true,\r\n                aspect:[1,1],\r\n                quality:0.5\r\n            })\r\n          if(!data.cancelled){\r\n              let newfile = { \r\n                uri:data.uri,\r\n                type:`test/${data.uri.split(\".\")[1]}`,\r\n                name:`test.${data.uri.split(\".\")[1]}` \r\n\r\n            }\r\n              handleUpload(newfile)\r\n          }\r\n      }else{\r\n         Alert.alert(\"you need to give up permission to work\")\r\n      }\r\n   }\r\n\r\n\r\n   const handleUpload = (image)=>{\r\n        const data = new FormData()\r\n        data.append('file',image)\r\n        data.append('upload_preset','skyMedi')\r\n        data.append(\"cloud_name\",\"skycloud55\")\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/skycloud55/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json()).\r\n        then(data=>{\r\n            setPicture(data.url)\r\n            setModal(false)\r\n        }).catch(err=>{\r\n            Alert.alert(\"error while uploading\")\r\n        })\r\n   }\r\n\r\n  const  SelectDept=(item)=>{\r\n        setDepartment(item.departmentname)\r\n        setDeptcode(item.code)\r\n  }\r\n\r\n   useEffect(()=>{\r\n    fetchDept()\r\n    },[])\r\n\r\n    const renderList = ((item)=>{\r\n        return(\r\n          \r\n          <TouchableOpacity \r\n                    activeOpacity={0.95}\r\n                    onPress={() =>{\r\n                                setDepartment(item.departmentname)\r\n                                setDeptcode(item.code)\r\n                                }}\r\n                    style={styles.option}>\r\n                    <Text style={styles.deptName}>{item.departmentname}</Text>\r\n                    \r\n          </TouchableOpacity>\r\n         \r\n        )\r\n      })\r\n   \r\n\r\n    return(\r\n\r\n        <View style={styles.container}>\r\n\r\n        <View style={styles.head}> \r\n        <MaterialIcons \r\n                        name=\"navigate-before\"\r\n                        size={30}\r\n                        onPress={() => navigation.goBack()}\r\n                        style={styles.back}/>\r\n\r\n              <Text style={styles.headtext}>Add Doctor</Text>\r\n        </View>\r\n    \r\n        \r\n\r\n        <ScrollView style={styles.formArea}>\r\n            <TextInput\r\n                label='First Name'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={first_name}\r\n               // onFocus={()=>setenableShift(false)}\r\n                theme={theme}\r\n                mode=\"outlined\"\r\n                onChangeText={text => setFirstName(text)}\r\n            />\r\n            <TextInput\r\n                label='Last Name'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={last_name}\r\n                // onFocus={()=>setenableShift(false)}\r\n                theme={theme}\r\n                mode=\"outlined\"\r\n                onChangeText={text => setLastName(text)}\r\n            />\r\n            <TextInput\r\n                label='Email'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={email}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(false)}\r\n                mode=\"outlined\"\r\n                onChangeText={text => setEmail(text)}\r\n            />\r\n            <TextInput\r\n                label='Phone'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={mobile}\r\n                theme={theme}\r\n                //onFocus={()=>setenableShift(false)}\r\n                keyboardType=\"number-pad\"\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setMobile(text)}\r\n            />\r\n             \r\n            <TextInput\r\n                label='Password'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={password}\r\n                mode=\"outlined\"\r\n                secureTextEntry={true}\r\n                // onFocus={()=>setenableShift(true)}\r\n                onChangeText={text =>setPassword(text)}\r\n            />\r\n            <Collapse>\r\n            <CollapseHeader>\r\n            <View style={{flexDirection:'row', justifyContent:'center',alignItems:'center'}}>\r\n            <TextInput\r\n                label='Gender'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={gender}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setGender(text)}\r\n            />\r\n           <View style={{width:'10%',backgroundColor:'lightgrey',padding:7,marginLeft:4,marginTop:4,marginEnd:12}}>\r\n                  <AntDesign name=\"down\" size={24} color=\"blue\" />\r\n            </View> \r\n            </View>\r\n            </CollapseHeader>\r\n            <CollapseBody style={{marginLeft:10}}>\r\n            <TouchableOpacity onPress={() => setGender(\"Male\")}><Text style={styles.option}>Male</Text></TouchableOpacity> \r\n            <TouchableOpacity onPress={() => setGender(\"Female\")}><Text style={styles.option}>Female</Text></TouchableOpacity>      \r\n            </CollapseBody>\r\n            </Collapse>\r\n    {/* <------------------  Department Selection -------------------> */}\r\n            <Collapse>\r\n            <CollapseHeader>\r\n            <View style={{flexDirection:'row', justifyContent:'center',alignItems:'center'}}>\r\n            <TextInput\r\n                label='Department'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={department}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setDepartment(text)}\r\n            />\r\n           <View style={{width:'10%',backgroundColor:'lightgrey',padding:7,marginLeft:4,marginTop:4,marginEnd:12}}\r\n           onPress={()=> fetchDept()}>\r\n                  <AntDesign name=\"down\" size={24} color=\"blue\" />\r\n            </View> \r\n            </View>\r\n            </CollapseHeader>\r\n            <CollapseBody style={{marginLeft:10}}>\r\n\r\n            <FlatList\r\n              data={deptData}\r\n              renderItem={({item})=>{\r\n                return renderList(item)\r\n              }}\r\n              keyExtractor={item=>item._id}\r\n            //   onRefresh={()=>fetchDept()}\r\n            //   refreshing={loading}\r\n              />\r\n\r\n\r\n            </CollapseBody>\r\n            </Collapse>\r\n\r\n{/* <--------------  Department Selection -----------------------> */}\r\n            {/* <TextInput\r\n                label='Department'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={department}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setDepartment(text)}\r\n            /> */}\r\n            <TextInput\r\n                label='Date of Birth'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={DOB}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setDOB(text)}\r\n            />\r\n            <TextInput\r\n                label='Registration No'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={registration_no}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setRegistration(text)}\r\n            />\r\n            <TextInput\r\n                label='Experience'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={experience}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setExperience(text)}\r\n            />\r\n            \r\n            <TextInput\r\n                label='Degree'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={degree}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setDegree(text)}\r\n            />\r\n            <TextInput\r\n                label='Designation'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={designation}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setDesignation(text)}\r\n            />\r\n            \r\n            <TextInput\r\n                label='Specialities'\r\n                placeholderTextColor=\"#666666\"\r\n                style={styles.inputStyle}\r\n                value={specialities}\r\n                theme={theme}\r\n                // onFocus={()=>setenableShift(true)}\r\n                mode=\"outlined\"\r\n                onChangeText={text =>setSpecialities(text)}\r\n            />\r\n             <Button \r\n             style={styles.btn}\r\n             icon={picture==\"\"?\"upload\":\"check\"}\r\n              mode=\"contained\" \r\n              theme={theme}\r\n              onPress={() => setModal(true)}>\r\n                    Upload Image\r\n             </Button>\r\n             \r\n             <Button \r\n             style={styles.btn}\r\n             icon=\"content-save\"\r\n              mode=\"contained\" \r\n              theme={theme}\r\n              onPress={() => submitData()}>\r\n                   save\r\n             </Button>\r\n             \r\n     \r\n     </ScrollView>\r\n             <Modal\r\n             animationType=\"slide\"\r\n             transparent={true}\r\n             visible={modal}\r\n             onRequestClose={()=>{\r\n                 setModal(false)\r\n             }}\r\n             >\r\n              <View style={styles.modalView}>\r\n                  <View style={styles.modalButtonView}>\r\n                        <Button icon=\"camera\"\r\n                         theme={theme}\r\n                        mode=\"contained\"\r\n                         onPress={() => pickFromCamera()}>\r\n                                camera\r\n                        </Button>\r\n                        <Button \r\n                        icon=\"image-area\"\r\n                         mode=\"contained\"\r\n                         theme={theme}\r\n                          onPress={() => pickFromGallery()}>\r\n                                gallery\r\n                        </Button>\r\n                  </View>\r\n                <Button \r\n                 theme={theme}\r\n                onPress={() => setModal(false)}>\r\n                        cancel\r\n                </Button>\r\n              </View>\r\n             </Modal>\r\n             \r\n      </View>\r\n     \r\n     \r\n \r\n    )\r\n}\r\n\r\nconst theme = {\r\n    colors:{\r\n        primary:\"#006aff\"\r\n    }\r\n}\r\nconst styles=StyleSheet.create({\r\n    container: {\r\n        flex: 1, \r\n        \r\n      },\r\n      head:{\r\n        backgroundColor: '#fff',\r\n        width: '100%',\r\n        flexDirection:'row',\r\n        alignItems:'center',\r\n        marginBottom:10\r\n        \r\n      },\r\n      back:{\r\n        padding:10,\r\n        color:'#694fad'\r\n      },\r\n      headtext:{\r\n        fontSize: 30,\r\n        fontWeight: \"bold\",\r\n        paddingHorizontal:80,\r\n        color:'#694fad'\r\n      },\r\n      formArea:{\r\n        height:'100%',\r\n        \r\n      },\r\n    root:{\r\n       flex:1,\r\n    },\r\n    inputStyle:{\r\n        flex: 1,\r\n        marginTop: 1,\r\n        // marginTop: Platform.OS === 'ios' ? 0 : -1,\r\n        paddingLeft: 2,\r\n        color: '#05375a',\r\n        height:38,\r\n        //borderRadius: 4,\r\n        elevation: 1,\r\n        shadowOffset: { width: 1, height: 1 },\r\n        shadowColor: '#333',\r\n        shadowOpacity: 0.3,\r\n        shadowRadius: 2,\r\n        marginBottom:1\r\n\r\n    },\r\n    option:{\r\n        marginTop: Platform.OS === 'ios' ? 0 : -1,\r\n        padding:6,\r\n        color: '#05375a',\r\n        marginEnd:300,\r\n        elevation: 1,\r\n        borderWidth:1,\r\n        borderColor:'lightgrey',\r\n        marginBottom:5,\r\n        fontSize:16,\r\n        fontWeight:'bold'\r\n      },\r\n      deptName:{\r\n        color: '#05375a',\r\n        fontSize:16,\r\n        fontWeight:'bold'\r\n      },\r\n    btn:{\r\n        marginVertical: 2,\r\n        \r\n    },\r\n    modalView:{\r\n        position:\"absolute\",\r\n        bottom:2,\r\n        width:\"100%\",\r\n        backgroundColor:\"white\"\r\n\r\n    },\r\n    modalButtonView:{\r\n        flexDirection:\"row\",\r\n        justifyContent:\"space-around\",\r\n        padding:10\r\n    }\r\n})\r\n\r\nexport default InsertDoctor"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
